package pro.szewczyk.euler.problems;

import pro.szewczyk.euler.AbstractProblem;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the
 * first 10 terms will be:
 * 
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
 * even-valued terms.
 */
public class Problem2 extends AbstractProblem<Long> {

    private static final Long M_4 = 4_000_000l;

    @Override
    public Long solveProblem() {
        Long tmp;
        Long sum_l = 0l;
        Long sum_r = 1l;
        Long ret = 0l;

        while (sum_l + sum_r <= M_4) {
            tmp = sum_l + sum_r;
            sum_l = sum_r;
            sum_r = tmp;
            if (tmp % 2 == 0) {
                ret += tmp;
            }
        }

        return ret;
    }

    public static void main(final String[] args) {
        new Problem2().printSolution();
    }
}
